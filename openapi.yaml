openapi: 3.0.0
info:
  description: "This is the Restheart Mongo API"
  version: "5"
  title: "Restheart API"
  contact:
    email: "integragreg@gmail.com"

servers:
  - url: 'http://127.0.0.1:8080'
    description: The running container instance
    variables:
      url:
        default: 127.0.0.1
      port:
        default: '8080'

tags:
- name: "Admin"
  description: "Administrative Functions" 
- name: "Collections"
  description: "Collection operations"
- name: "Items"
  description: "Item operations"
  # externalDocs:
  #   description: "Find out more about our store"
  #   url: "http://swagger.io"

paths:


  /:
    put:
      tags:
      - "Admin"
      summary: "Attaches Restheart to the default Mongo database"
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
    get:
      tags:
        - "Admin"
      summary: "Retrieves the names of all collections known by the API"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                example:
                - acl
                - inventory
                - inventory2
                - myColl
                - myDb
                - testColl
                - users
                
  /{collName}:
      put:
        summary: "Creates a new database with the name specified"
        parameters:
        - in: path
          name: collName
          description: "The name of the collection to create"
          schema:
            type: string
            example: myColl
          required: true
       
        requestBody:
          content:
            application/json:
              schema:
                example: {"descr": "just a test db"}
                description: Any metadata that can be converted to JSON.
        responses:
          "200":
            description: OK - database already existed
          "201":
            description: OK - resource created
        tags:
          - Collections
      
      get:
        tags:
          - Collections
        summary: Gets all the items in the specified collection.
        parameters:
          - in: path
            name: collName
            description: the name of the collection
            schema:
              type: string
              example: myColl
            required: true
        responses:
              "200":
                description: OK
                content:
                  application/json:
                    schema:
                      example:
                      - item: journal
                        qty: 25
                        size:
                          h: 14
                          w: 21
                          uom: cm
                        status: A
                      - item: notebook
                        qty: 50
                        size:
                          h: 8.5
                          w: 11
                          uom: in
                        status: A
                      - item: paper
                        qty: 100
                        size:
                          h: 8.5
                          w: 11
                          uom: in
                        status: D
                      - item: planner
                        qty: 75
                        size:
                          h: 22.85
                          w: 30
                          uom: cm
                        status: D
                      - item: postcard
                        qty: 45
                        size:
                          h: 10
                          w: 15.25
                          uom: cm
                        status: A   
        
      post:
        summary: Adds a list of documents to the specified collection
        description: |
          The contents of the body provide the documents to add, in JSON format.
        parameters:
          - in: path
            name: collName
            description: the name of the collection to which the documents are added
            schema:
              type: string
              example: myColl
            required: true
        requestBody:
          content:
            application/json:
              schema:
                example: 
                - item: journal
                  qty: 25
                  size:
                    h: 14
                    w: 21
                    uom: cm
                  status: A
                - item: notebook
                  qty: 50
                  size:
                    h: 8.5
                    w: 11
                    uom: in
                  status: A
                - item: paper
                  qty: 100
                  size:
                    h: 8.5
                    w: 11
                    uom: in
                  status: D
                - item: planner
                  qty: 75
                  size:
                    h: 22.85
                    w: 30
                    uom: cm
                  status: D
                - item: postcard
                  qty: 45
                  size:
                    h: 10
                    w: 15.25
                    uom: cm
                  status: A
        responses:
          "200":
            description: "successful operation"
            content: 
              application/json:
                schema:
                  example: # todo: create a data structure for this
                    inserted: 5
                    links:
                      - /inventory/5f6c4b1a794dbe66cb897501
                      - /inventory/5f6c4b1a794dbe66cb897502
                      - /inventory/5f6c4b1a794dbe66cb897503
                      - /inventory/5f6c4b1a794dbe66cb897504
                      - /inventory/5f6c4b1a794dbe66cb897505
                    deleted: 0
                    modified: 0
                    matched: 0
                  
             
            #   $ref: "#/definitions/ApiResponse"
        tags:
          - Collections
   
      delete:
        tags:
          - Collections
        summary: Removes the specified collection - note that this also works for "databases".
        description: |
        
          The Etag of the collection must be specified in the 'If-Match' header of the request. This is the identifier of the collection that is to be removed. It can be obtained by issuing a GET request to the _meta path for the collection.
        parameters:
          - in: path
            name: collName
            description: the name of the collection to delete
            required: true
            schema:
              type: string
              example: myColl
          - in: header
            name: If-Match
            description: The Etag of the collection to remove
            required: true
            schema:
              type: string
              example: 5f6b46d434d80e04100c7f64
        responses:
          "204":
            description: OK - no content
          
       
  /{collName}/_meta:
      get:
        summary: Gets metadata about the specified database.
        parameters:
          - in: path
            name: collName
            description: The name of the collection whose metadata is being retrieved.
            schema:
              type: string
              example: myColl
            required: true
        responses:
          "200":
            description: OK
            content:
              application/json:
                schema:
                  example: {
                    "_id": "_meta",
                    "descr": "just a test db",
                    "_etag": {
                      "$oid": "5f6c4289794dbe66cb8974fb"
                    }
                  }
        tags:
          - Collections
    
  
          
  /{collName}/{itemName}:
      put:
        summary: Adds a single item to a parent collection.
        parameters:
          - in: path
            name: collName
            description: the name of the parent collection that the item is added to
            schema:
              type: string
              example: myColl
            required: true
          - in: path
            name: itemName
            description: the name of the item to add
            schema:
              type: string
              example: myItem
            required: true
        requestBody:
          content:
            application/json:
              schema:
                example:
                  item: pencil
                  qty: 55
                  size:
                    h: 10
                    w: 0.5
                    uom: cm
                  status: B
                  suppliers:
                    - brand_1
                    - brand_2
                    - brand_3
        responses:
          "200": 
            description: OK
          "201":
            description: OK
          "406":
            description: Not acceptable
            content:
              application/json:
                schema:
                  example:
                    http status code: 406
                    http status description: Not Acceptable
                    message: request data can be an array only for POST to collection resources (bulk post)
                  
        tags:
          - Items
   
      get:
        tags:
          - Items
        summary: Gets all the items in the specified collection.
        parameters:
          - in: path
            name: collName
            description: the name of the collection
            schema:
              type: string
              example: myColl
            required: true
          - in: path
            name: itemName
            required: true
            schema:
              type: string
              example: myItem
        responses:
              "200":
                description: OK
                content:
                  application/json:
                    schema:
                      example:
                      - item: journal
                        qty: 25
                        size:
                          h: 14
                          w: 21
                          uom: cm
                        status: A
                      - item: notebook
                        qty: 50
                        size:
                          h: 8.5
                          w: 11
                          uom: in
                        status: A
                      - item: paper
                        qty: 100
                        size:
                          h: 8.5
                          w: 11
                          uom: in
                        status: D
                      - item: planner
                        qty: 75
                        size:
                          h: 22.85
                          w: 30
                          uom: cm
                        status: D
                      - item: postcard
                        qty: 45
                        size:
                          h: 10
                          w: 15.25
                          uom: cm
                        status: A   
      
      post:
        summary: Adds a list of documents to the specified collection
        description: |
          The contents of the body provide the documents to add, in JSON format.
        parameters:
          - in: path
            name: collName
            description: the name of the collection to which the documents are added
            schema:
              type: string
              example: myColl
            required: true
          - in: path
            name: itemName
            required: true
            schema:
              type: string
              example: myItem
        requestBody:
          content:
            application/json:
              schema:
                example: 
                - item: journal
                  qty: 25
                  size:
                    h: 14
                    w: 21
                    uom: cm
                  status: A
                - item: notebook
                  qty: 50
                  size:
                    h: 8.5
                    w: 11
                    uom: in
                  status: A
                - item: paper
                  qty: 100
                  size:
                    h: 8.5
                    w: 11
                    uom: in
                  status: D
                - item: planner
                  qty: 75
                  size:
                    h: 22.85
                    w: 30
                    uom: cm
                  status: D
                - item: postcard
                  qty: 45
                  size:
                    h: 10
                    w: 15.25
                    uom: cm
                  status: A
        responses:
          "200":
            description: "successful operation"
            content: 
              application/json:
                schema:
                  example: # todo: create a data structure for this
                    inserted: 5
                    links:
                      - /inventory/5f6c4b1a794dbe66cb897501
                      - /inventory/5f6c4b1a794dbe66cb897502
                      - /inventory/5f6c4b1a794dbe66cb897503
                      - /inventory/5f6c4b1a794dbe66cb897504
                      - /inventory/5f6c4b1a794dbe66cb897505
                    deleted: 0
                    modified: 0
                    matched: 0
                  
             
            #   $ref: "#/definitions/ApiResponse"
        tags:
          - Items  
      
      patch:
        summary: Edits the specified document, replacing the specified attribute.
        parameters:
          - in: path
            name: collName
            required: true
            schema:
              type: string
              example: myColl
          - in: path
            name: itemName
            required: true
            schema:
              type: string
              example: myItem
        requestBody:
          content:
            application/json:
              schema:
                example:
                  { "status": "B" }
                  
        responses:
          "200":
            description: OK
        tags:
          - Items
     
      delete:
        summary: Deletes the specified item
        parameters:
          - in: path
            name: collName
            required: true
            description: the name of the collection in which the item is stored
            schema:
              type: string
              example: myColl
          - in: path
            name: itemName
            required: true
            description: the id of the item to remove
            schema:
              type: string
              example: myItem
        responses:
          "204":
            description: OK - item removed
          "401":
            description: Unauthorized
          "404":
            description: Item not found
        tags:
          - Items
          


components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
security: 
  - basicAuth: []
  